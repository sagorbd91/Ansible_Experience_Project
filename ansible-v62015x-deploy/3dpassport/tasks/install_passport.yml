---

- name: Check if installer path exists
  remote_user: "{{ plm_user }}"
  stat: path="{{passport_installer_path}}/fp1517/X3D_PASS.Full.Linux64"
  register: check_path
  tags:
    - install-passport

- name: Installer doesn't exist
  remote_user: "{{ plm_user }}"
  fail: msg="3DPassport installer doesn't exist!!"
  when: not check_path.stat.exists
  tags:
    - install-passport

    
- name: create the dir for mysql driver
  remote_user: monitor
  become: true
  file: path="{{ drivers_dir }}" state=directory owner={{ plm_user }} group={{ plm_group }} mode="u=rwx,g=rw"
  tags: 
    - install-passport
    
  
- name: unarchiving mysql connector 
  remote_user: monitor
  become: true
  unarchive: src="{{ mysql_driver }}" dest="{{ drivers_dir }}" owner={{ plm_user }} group={{ plm_group }} copy=no 
  tags: 
   - install-passport
   
- name: Ensure '/var/DassaultSystemes' folder exist
  remote_user: monitor
  become: true
  file:
      path: "{{ passport_dir_var }}"
      state: directory
      owner: "{{ plm_user }}"
      group: "{{ plm_group }}"
      mode: "755"
  tags: 
    - install-passport
 
- name: Copy the answer file to Installer Directory
  remote_user: monitor
  become: true
  template: src="answer_new.j2" dest="{{passport_conf_dir}}/answer_ga.txt" mode=2777
  tags: 
    - install-passport

- name: Executing the installation script.
  remote_user: "{{ plm_user }}"
  shell: ./StartTUI.sh -installerPath {{ ds_installer_path }} < {{passport_conf_dir}}/answer_ga.txt
  args:
    chdir: /{{passport_installer_path}}/fp1517/X3D_PASS.Full.Linux64/1  
  tags: 
    - install-passport

- name: Remove the Answer file
  remote_user: monitor
  become: true
  file: path="{{passport_conf_dir}}/answer_ga.txt" state=absent
  tags: 
    - install-passport
  
