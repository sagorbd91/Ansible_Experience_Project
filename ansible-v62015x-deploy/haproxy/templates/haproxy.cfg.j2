#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    #   default log         127.0.0.1 local2
    log         127.0.0.1 local0
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    {{ mode }}
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
frontend main
bind *:{{ lb_port }}
#    acl url_static       path_beg       -i /static /images /javascript /stylesheets
#    acl url_static       path_end       -i .jpg .gif .png .css .js
#
#    use_backend static          if url_static
#=====================================================================
frontend {{env_name}}-mcs-nocas
bind *:{{frontend_port_mcs_nocas}}
default_backend         app-{{env_name}}-mcs-nocas
#=====================================================================
frontend {{env_name}}-mcs-cas
bind *:{{frontend_port_mcs_cas}}
default_backend         app-{{env_name}}-mcs-cas
#=====================================================================
frontend {{env_name}}-fcs-central
bind *:{{frontend_port_fcs_central}}
default_backend             app-{{env_name}}-fcs-central
#=====================================================================
#---------------------------------------------------------------------
# static backend for serving up images, stylesheets and such
#---------------------------------------------------------------------
#backend static
#    balance     roundrobin
#    server      static 127.0.0.1:4331 check
#
#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------
backend app-{{env_name}}-mcs-nocas
    balance     {{ balance }}
    option httpchk OPTIONS /
    cookie JSESSIONID prefix
    server  {{env_name}}-mcs-nocas-i1 {{mcs_nocas_i1}} cookie JSESSIONID_MCS-NOCAS_1 check
    server  {{env_name}}-mcs-nocas-i2 {{mcs_nocas_i2}} cookie JSESSIONID_MCS-NOCAS_2 check
backend app-{{env_name}}-mcs-cas
    balance     {{ balance }}
    option httpchk OPTIONS /
    cookie JSESSIONID prefix
    server  {{env_name}}-mcs-cas-i1 {{mcs_cas_i1}} cookie JSESSIONID_MCS-CAS_1 check
    server  {{env_name}}-mcs-cas-i2 {{mcs_cas_i2}} cookie JSESSIONID_MCS-CAS_2 check
backend app-{{env_name}}-fcs-central
    balance     {{ balance }}
    option httpchk OPTIONS /
    server  {{env_name}}-fcs-central-i1 {{fcs_central_i1}} check
    server  {{env_name}}-fcs-central-i2 {{fcs_central_i2}} check
#---------------------------------------------------------------------
# Stats
#---------------------------------------------------------------------
    listen stats :9000
    mode http
    stats enable
    stats hide-version
    stats realm Haproxy\
    stats       uri /lb-stats
    stats auth  haproxy:haproxy
