---
   
- name: Check if FTS installer path exists
  remote_user: "{{ plm_user }}"
  stat: path="{{ fts_installer_path }}"
  register: check_path
  tags: install-fts


- name: FTS installer doesn't exist
  remote_user: "{{ plm_user }}"
  fail: msg="FTS installer doesn't exist!!"
  when: not check_path.stat.exists
  tags: install-fts
   
 
- name: Copy the FTS Single Server Answer file to Installer Directory
  remote_user: monitor
  become: true
  template: src="answer.j2" dest="{{ fts_conf_dir }}/answer.txt" mode=2777
  when: fts_type=="fts"
  tags: 
   - install-fts

- name: Copy the FTS Master Server Answer file to Installer Directory
  remote_user: monitor
  become: true
  template: src="answer_master.j2" dest="{{ fts_conf_dir }}/answer.txt" mode=2777
  when: fts_type=="ftsmaster"
  tags: 
   - install-fts

- name: Copy the FTS Slave Server Answer file to Installer Directory
  remote_user: monitor
  become: true
  template: src="answer_slave.j2" dest="{{ fts_conf_dir }}/answer.txt" mode=2777
  when: fts_type=="ftsslave"
  tags: 
   - install-fts

- name: Executing the FTS installation script.
  remote_user: "{{ plm_user }}"
  shell: ./StartTUI.sh < {{ fts_conf_dir }}/answer.txt
  args:
    chdir: /{{ fts_installer_path }}/1
  register: cat
  tags: 
   - install-fts


- name: Remove the FTS Answer file
  remote_user: monitor
  become: true
  file: path="{{ fts_conf_dir }}/answer.txt" state=absent
  tags: 
   - install-fts
